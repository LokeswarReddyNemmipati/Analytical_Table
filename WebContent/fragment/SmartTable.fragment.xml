<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns="sap.m" xmlns:build="sap.build" xmlns:core="sap.ui.core"
	xmlns:smartlink="sap.ui.comp.navpopover" xmlns:smartFilterBar="sap.ui.comp.smartfilterbar"
	xmlns:st="sap.ui.comp.smarttable" xmlns:table="sap.ui.table"
	xmlns:app="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:smartList="sap.ui.comp.smartlist"
	template:require="zvui.work.controller.Helper zvui.work.controller.AnnotationHelper"
	xmlns:layout="sap.ui.layout">

	<template:alias name=".AH"
		value="sap.ui.model.odata.AnnotationHelper">
		<template:alias name=".formatParts"
			value="zvui.work.controller.Helper.formatParts">
			<template:alias name=".id"
				value="zvui.work.controller.Helper.id">

				<template:with path="facet>Target" var="target">
					<template:with path="target>"
						helper="sap.ui.model.odata.AnnotationHelper.gotoEntitySet" var="listEntitySet">
						<template:with path="listEntitySet>entityType"
							helper="sap.ui.model.odata.AnnotationHelper.gotoEntityType" var="listEntityType">
							<template:with path="target>"
								helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="collection">
								<template:with path="listEntityType>"
									helper="zvui.work.controller.AnnotationHelper.searchForFirstSemKey_Title_Description"
									var="targetColumn">
									<template:with
										path="listEntityType>com.sap.vocabularies.UI.v1.HeaderInfo"
										var="header">


										<!-- <layout:DynamicSideContent
											id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::DSC"
											class="dynamicSideContentHeight dscSideContent"
											showSideContent="false" containerQuery="true"
											sideContentFallDown="BelowM">
											<layout:mainContent> -->
											
											<layout:ResponsiveSplitter default="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::MainContent"
											id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::DSC"
											class="vistexResponsiveSplitter">
												<layout:PaneContainer width="100%">
												<layout:SplitPane
													id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::MainContent">
												<ScrollContainer height="100%" horizontal="false" vertical="true">
												<Panel width="100%" class="vistexResponsiveSplitterMainPanel">
												<template:if
													test="{path: 'listEntityType>', formatter: 'zvui.work.controller.AnnotationHelper.showQuickFilter'}">

													<smartFilterBar:SmartFilterBar
														id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::FilterBar"
														entitySet="{path: 'listEntitySet>name'}"
														filterBarExpanded="true" pendingChange="onPendingChange"
														persistencyKey="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::TableFilter"
														useToolbar="false" enableBasicSearch="false"
														showFilterConfiguration="false" considerSelectionVariants="true">
														<smartFilterBar:controlConfiguration>

															<template:with
																path="listEntityType>com.sap.vocabularies.UI.v1.SelectionFields"
																var="selectionFieldCollection">
																<template:repeat list="{selectionFieldCollection>}"
																	var="selectionField">
																	<!-- <template:with path="selectionField>" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" 
																		var="selectionFieldValue"> -->
																	<smartFilterBar:ControlConfiguration
																		key="{selectionField>PropertyPath}" filterType="single"
																		hasValueHelpDialog="false"
																		preventInitialDataFetchInValueHelpDialog="false">
																	</smartFilterBar:ControlConfiguration>
																	<!-- </template:with> -->
																</template:repeat>
															</template:with>

														</smartFilterBar:controlConfiguration>
														<smartFilterBar:layoutData>
															<FlexItemData shrinkFactor="0" />
														</smartFilterBar:layoutData>
													</smartFilterBar:SmartFilterBar>
												</template:if>

												<template:if
													test="{= !(${parts: [{path: 'columnModel>/ShowDetailDetail'}], formatter:'zvui.work.controller.AnnotationHelper.getshowDetailDetailButton'})}">
													<MessageStrip
														text="{parts: [{path: 'listEntitySet>'},{path: 'columnModel>/ShowDetailDetail'}], formatter: 'zvui.work.controller.AnnotationHelper.getFilterMessageStripText'}"
														type="Information" showIcon="true"
														visible="{parts: [{path: 'listEntitySet>'},{path: 'columnModel>/ShowDetailDetail'}], formatter: 'zvui.work.controller.AnnotationHelper.showFilterMessageStrip'}">
													</MessageStrip>
												</template:if>
												<!-- showTablePersonalisation="{parts:[{path: 'listEntitySet>'},{path: 'listEntityType>'}], formatter:'zvui.work.controller.AnnotationHelper.showTablePersonalisation'}" -->
												<st:SmartTable
													id="{path: 'facet>', formatter: '.id'}::SmartTable"
													persistencyKey="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table"
													tableBindingPath="{parts: [{path: 'entitySet>'} , {path: 'listEntitySet>'}, {path: 'listEntityType>'}, {path: 'facets>'}, {path: 'facet>'}, {path: 'header>'}, {path: 'target>AnnotationPath'}], formatter: 'zvui.work.controller.AnnotationHelper.setTableBindingPath'}"
													fitContainer="false" useOnlyOneSolidToolbar="true"
													beforeRebindTable="onTableRebind" enableAutoBinding="false"
													showRowCount="false" initialise="onTableInitialise"
													requestAtLeastFields="{path: 'listEntityType>', formatter: 'zvui.work.controller.AnnotationHelper.getRequestAtLeastFields'}"
													useVariantManagement="true" useExportToExcel="false"
													useTablePersonalisation="true"
													showTablePersonalisation="{parts:[{path: 'listEntitySet>'},{path: 'listEntityType>'}], formatter:'zvui.work.controller.AnnotationHelper.showTablePersonalisation'}"
													header="{path: 'facet>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
													entitySet="{path: 'listEntitySet>name'}"
													ignoreFromPersonalisation="{parts: [{path: 'collection>'}], formatter: 'zvui.work.controller.AnnotationHelper.suppressP13NDuplicateColumns'}"
													demandPopin="{ parts:[{path: 'columnModel>/entities'},{path: 'listEntityType>'}], formatter: 'zvui.work.controller.AnnotationHelper.isEntityResponsiveTable'}"
													enableCustomFilter="false" noData="{i18n>NODATA}"
													build:metadata="#pattern:Table;bindingContext:columns:Items:\{path: 'target>', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'\};"
													visible="{= ${path: 'facet>com.sap.vocabularies.UI.v1.Hidden'} ? ${path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getBindingForHiddenPath'} : true}"
													editable="{parts: [{path: 'listEntitySet>'},{path: 'facet>'}, {path: 'columnModel>/entities'},{path: 'listEntityType>'},{path: 'columnModel>/ShowDetailDetail'}], formatter: 'zvui.work.controller.AnnotationHelper.isSmartTableEditable'}"
													fieldChange="onTableFieldChange" placeToolbarInTable="true"
													dataReceived="onDataReceived"
													smartFilterId="{parts: [{path: 'listEntityType>'}, {path: 'facet>'}], formatter: 'zvui.work.controller.AnnotationHelper.setQuickFilterId'}">

													<!-- header="{parts: [{path: 'facets>'}, {path: 'facet>'}, {path: 
														'header>'}], formatter: 'zvui.work.controller.AnnotationHelper.getTableTitle'}" 
														smartFilterId="{parts: [{path: 'listEntitySet>'}, {path: 'listEntityType>'}, 
														{path: 'facet>'}, {path: 'header>'}], formatter: 'zvui.work.controller.AnnotationHelper.setTableFilterId'}" -->
													<!-- tableType="{parts: [{path: 'viewModel>/'}], formatter: 
														'zvui.work.controller.AnnotationHelper.setTableType'}" editable="{ui>/editable}" -->
													<st:customData>
														<core:CustomData key="useSmartToggle"
															value="true" />
														<core:CustomData key="useSmartField"
															value="true" />
														<core:CustomData key="dateFormatSettings"
															value='\{"UTC":true,"style":"medium"\}' />
														<template:if
															test="{= ${facet>Target/AnnotationPath}.split('#')[1]}">
															<core:CustomData key="lineItemQualifier"
																value="{= ${facet>Target/AnnotationPath}.split('#')[1]}" />
														</template:if>
														<template:with
															path="listEntityType>com.sap.vocabularies.UI.v1.PresentationVariant"
															var="variant">
															<template:if test="{= ${variant>SortOrder}}">
																<core:CustomData key="TemplateSortOrder"
																	value="{path: 'variant>SortOrder', formatter: 'zvui.work.controller.AnnotationHelper.getSortOrder'}" />
															</template:if>
														</template:with>
													</st:customData>

													<st:semanticObjectController>
														<smartlink:SemanticObjectController
															beforePopoverOpens="._templateEventHandlers.onBeforeSemanticObjectLinkPopoverOpens"
															navigate="._templateEventHandlers.onSemanticObjectLinkPopoverLinkPressed"
															navigationTargetsObtained="._templateEventHandlers.onSemanticObjectLinkNavigationTargetObtained"
															forceLinkRendering="{parts: [{path: 'listEntitySet>'}], formatter: 'zvui.work.controller.AnnotationHelper.hasQuickViewFacet'}" />
													</st:semanticObjectController>
													<st:layoutData>
														<layout:GridData
															id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::GridData"
															span="XL12 L12 M12 S12" />
														<FlexItemData growFactor="1" baseSize="0%" />
													</st:layoutData>

													<st:customToolbar>
														<OverflowToolbar
															id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::Toolbar"
															design="Transparent">
															<!-- <Button
																id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::Toolbar::SelectAll"
																type="Transparent" icon="sap-icon://multiselect-all"
																press="onSelectAllToggle" tooltip="{i18n>SELECT_ALL}">
																<customData>
																	<core:CustomData key="Action" value="SELECT_ALL" />
																</customData>
															</Button> -->															
															<ToolbarSpacer />
															<!--Object page search field -->															
															<template:if
																test="{= !(${listEntitySet>Org.OData.Capabilities.V1.SearchRestrictions/Searchable/Bool} === 'false') }">
																<!-- <core:Fragment fragmentName="zvui.work.fragment.SearchField" 
																	type="XML"/> -->
															</template:if>															
															<core:Fragment
																fragmentName="zvui.work.fragment.AnnotatedActionButtons"
																type="XML" />
															<!-- <core:Fragment fragmentName="zvui.work.fragment.CRUDActionButtons" 
																type="XML"/> -->

															<template:if
																test="{= !(${listEntitySet>Org.OData.Capabilities.V1.UpdateRestrictions/Updatable/Bool} === 'false') }">
																<!-- Edit Button -->
																<!-- icon="sap-icon://edit" -->
																<!-- <Button id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::Toolbar::RowEdit" 
																	type="Transparent" press="onCallActionFromToolBar" tooltip="{i18n>EDIT}" 
																	enabled="{parts: [{path: 'columnModel>/ShowDetailDetail'}, {path: 'listEntitySet>'} 
																	], formatter: 'zvui.work.controller.AnnotationHelper.isTableButtonEnabled'}" 
																	text="{i18n>EDIT}" visible="{parts: [{path: 'listEntitySet>'}], formatter: 
																	'zvui.work.controller.AnnotationHelper.isTableShowToolsVisible'}"> <customData> 
																	<core:CustomData key="Action" value="{path: 'listEntitySet>name'}_LOCK" /> 
																	</customData> </Button> -->
																<!-- <OverflowToolbarButton id="{path: 'facet>', formatter: 
																	'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::Toolbar::RowDetails" 
																	icon="sap-icon://detail-view" type="Transparent" press="onCallActionFromToolBar" 
																	tooltip="{i18n>DETAILS}" enabled="{parts: [{path: 'columnModel>/ShowDetailDetail'}, 
																	{path: 'listEntitySet>'} ], formatter: 'zvui.work.controller.AnnotationHelper.isTableButtonEnabled'}" 
																	text="{i18n>DETAILS}" visible="{parts: [{path: 'listEntitySet>'}], formatter: 
																	'zvui.work.controller.AnnotationHelper.isTableShowToolsVisible'}"> <customData> 
																	<core:CustomData key="Action" value="Row_Details" /> </customData> </OverflowToolbarButton> -->
																<!-- <SegmentedButton
																	id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::Toolbar::SegButton"
																	visible="{parts: [{path: 'listEntityType>'},{path: 'listEntitySet>'}], formatter: 'zvui.work.controller.AnnotationHelper.isTableNavigationVisible'}">
																	<items>
																		<SegmentedButtonItem icon="sap-icon://detail-view"
																			tooltip="{i18n>DETAILS}" key="details"
																			press="onDrilldownButtonActionChange">
																			<customData>
																				<core:CustomData key="Action" value="details" />
																				<core:CustomData key="entitySet"
																					value="{path: 'listEntitySet>name'}" />
																			</customData>
																		</SegmentedButtonItem>
																		<SegmentedButtonItem icon="sap-icon://drill-down"
																			tooltip="{i18n>CHILD_SEC}" key="child"
																			press="onDrilldownButtonActionChange">
																			<customData>
																				<core:CustomData key="Action" value="child" />
																				<core:CustomData key="entitySet"
																					value="{path: 'listEntitySet>name'}" />
																			</customData>
																		</SegmentedButtonItem>

																	</items>
																</SegmentedButton> -->

																<!-- text="{i18n>CLOSE}" tooltip="{i18n>DETAILS_CLOSE}" -->
																<!-- <Button id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::Toolbar::DetailsClose" 
																	type="Transparent" icon="sap-icon://sys-cancel" press="onCloseTableDSC" tooltip="{i18n>CLEAR_SELECTION}" 
																	enabled="{parts: [{path: 'columnModel>/ShowDetailDetail'}, {path: 'listEntitySet>'} 
																	], formatter: 'zvui.work.controller.AnnotationHelper.isTableButtonEnabled'}" 
																	visible="{parts: [{path: 'listEntitySet>'},{value: 'close'}], formatter: 
																	'zvui.work.controller.AnnotationHelper.isTableShowToolsVisible'}"> <customData> 
																	<core:CustomData key="Action" value="Details_CLOSE" /> </customData> </Button> -->

															</template:if>

															<!-- <template:if test="{ parts:[{path: 'columnModel>/entities'},{path: 
																'listEntityType>'}], formatter: 'zvui.work.controller.AnnotationHelper.isEntityResponsiveTable'}"> 
																Switch to Grid Button <template:then> <OverflowToolbarButton icon="sap-icon://table-view" 
																type="Transparent" press="onTableTypeChange" text="{i18n>SWITCHTOGRID}" tooltip="{i18n>SWITCHTOGRID}"> 
																<customData> <core:CustomData key="SwitchTO" value="GridTable" /> </customData> 
																</OverflowToolbarButton> </template:then> <template:else> Switch to List 
																<OverflowToolbarButton icon="sap-icon://list" type="Transparent" press="onTableTypeChange" 
																text="{i18n>SWITCHTOLIST}" tooltip="{i18n>SWITCHTOLIST}"> <customData> <core:CustomData 
																key="SwitchTO" value="ResponsiveTable" /> </customData> </OverflowToolbarButton> 
																</template:else> </template:if> -->
															<template:if
																test="{parts: [{path: 'listEntitySet>'}], formatter: 
																				'zvui.work.controller.AnnotationHelper.showSmartTableEditButton'}">
																<template:then>
																	<!-- <Button press="onShowDsc" icon="sap-icon://wrench" 
																		type="Transparent" visible="{parts: [{path: 'listEntitySet>'}], formatter: 
																		'zvui.work.controller.AnnotationHelper.isTableShowToolsVisible'}" tooltip="{i18n>SHOWDSC1}" 
																		/> -->
																</template:then>
															</template:if>

															<template:if
																test="{path: 'listEntitySet>', formatter:'zvui.work.controller.AnnotationHelper.showRowLevelFilterButton'}">
																<OverflowToolbarButton icon="sap-icon://clear-filter"
																	type="Transparent" text="{i18n>CLEARFILTER}" tooltip="{i18n>CLEARFILTER}"
																	press="onCallActionFromToolBar">
																	<customData>
																		<core:CustomData key="Action"
																			value="{path: 'listEntitySet>name'}_REMOVE_FILTER" />
																	</customData>
																</OverflowToolbarButton>
															</template:if>
															<ToolbarSeparator visible="{parts: [{path: 'listEntityType>'},{value: 'ENABLEMULTISELECTBUTTON'}], formatter: 'zvui.work.controller.AnnotationHelper.getUITableSelectionMode'}" />
															<Label text="{i18n>MULTISELECT}:" visible="{parts: [{path: 'listEntityType>'},{value: 'ENABLEMULTISELECTBUTTON'}], formatter: 'zvui.work.controller.AnnotationHelper.getUITableSelectionMode'}"/>
															<Switch state="false" tooltip="{i18n>ENABLEMULTISELECT}" change="onTableSelectionModeChange"
																visible="{parts: [{path: 'listEntityType>'},{value: 'ENABLEMULTISELECTBUTTON'}], formatter: 'zvui.work.controller.AnnotationHelper.getUITableSelectionMode'}">
																<customData>
																	<core:CustomData key="entitySet"
																		value="{path: 'listEntitySet>name'}" />
																</customData>
															</Switch>	
															<Button
																id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::Toolbar::SelectNone"
																type="Transparent" icon="sap-icon://decline"
																visible="{parts: [{path: 'listEntityType>'},{value: 'ENABLEMULTISELECTBUTTON'}], formatter: 'zvui.work.controller.AnnotationHelper.getUITableSelectionMode'}"
																press="onSelectAllToggle" tooltip="{i18n>SELECT_NONE}">
																<customData>
																	<core:CustomData key="Action" value="SELECT_NONE" />
																</customData>
															</Button>
															<template:if
																test="{ parts:[{path: 'columnModel>/entities'},{path: 'listEntityType>'}], formatter: 'zvui.work.controller.AnnotationHelper.isEntityResponsiveTable'}">
															<template:then>
															</template:then>
															<template:else>
																<ToolbarSeparator />
																<Button type="Transparent"
																	tooltip="{i18n>COMPACT}" visible="{= !${viewModel>/CompactMode}}"
																	icon="sap-icon://decrease-line-height" press="onChangeContentDensity">
																	<customData>
																		<core:CustomData key="CONTENTDENSITY"
																			value="COMPACT" />
																	</customData>
																</Button>
																<Button type="Transparent"
																	tooltip="{i18n>COZY}" visible="{= ${viewModel>/CompactMode}}"
																	icon="sap-icon://increase-line-height" press="onChangeContentDensity">
																	<customData>
																		<core:CustomData key="CONTENTDENSITY"
																			value="COZY" />
																	</customData>
																</Button>
															</template:else>
															</template:if>
														</OverflowToolbar>
													</st:customToolbar>

													<template:if
														test="{ parts:[{path: 'columnModel>/entities'},{path: 'listEntityType>'}], formatter: 'zvui.work.controller.AnnotationHelper.isEntityResponsiveTable'}">
														<template:then>
															<Table
																id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::responsiveTable"
																fixedLayout="false" growing="true" growingScrollToLoad="true"
																growingThreshold="100"
																mode="{parts: [{path: 'listEntityType>'}], formatter: 'zvui.work.controller.AnnotationHelper.getRespTableSelectionMode'}"
																selectionChange=".onSelectionChange" itemPress=".onItemPress">
																<!-- "MultiSelect" -->
																<core:Fragment fragmentName="zvui.work.fragment.TableColumns"
																	type="XML" />
																<core:Fragment
																	fragmentName="zvui.work.fragment.TableColumnListItem"
																	type="XML" />
															</Table>
														</template:then>
														<template:else>
															<table:Table
																id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::gridTable"
																enableColumnReordering="true" 
																selectionMode="{parts: [{path: 'listEntityType>'}], formatter: 'zvui.work.controller.AnnotationHelper.getUITableSelectionMode'}"
																rowSelectionChange="onSelectionChange" visibleRowCount="12" threshold="25"
																visibleRowCountMode="Interactive"
																enableBusyIndicator="true" enableColumnFreeze="true"																
																enableCellFilter="true"
																rowActionCount="{parts: [{path: 'listEntitySet>'},{path: 'listEntityType>'},{path: 'columnModel>/showDetailButton'}], formatter: 'zvui.work.controller.AnnotationHelper.getSmartTableRowActionCount'}">

																<!--"MultiToggle" cellClick="onCellClick" visibleRowCount="10" 
																	class="sapUiSizeCondensed" class="{parts: [{path: 'facet>'}, {path: 'parameter>/settings'}, 
																	{path: 'entityType>com.sap.vocabularies.UI.v1.Facets'},{path: 'parameter>/manifest/sap.ui5/extends/extensions/sap.ui.viewExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details'},{path: 
																	'parameter>/manifest/sap.ui.generic.app/pages'}], formatter: 'zvui.work.controller.AnnotationHelper.setSizeCondensedCssClass'}" 
																	selectionMode="{= ${parts: [{path: 'entityType>com.sap.vocabularies.UI.v1.LineItem'}, 
																	{path: 'parameter>/entitySet'}, {path: 'parameter>/manifest/sap.ui5/extends/extensions/sap.ui.controllerExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details/sap.ui.generic.app'}, 
																	{path: 'facet>'}, {path: 'parameter>/settings/sections'}, {path: 'listEntitySet>'}, 
																	{path: 'parameter>/manifest/sap.ui.generic.app/pages'}, {path: 'parameter>/isDraftEnabled'}, 
																	{path: 'parameter>/settings/allTableMultiSelect'}], formatter: 'zvui.work.controller.AnnotationHelper.getSelectionModeGridTable'}}" 
																	rowSelectionChange="._templateEventHandlers.onSelectionChange" rowActionCount="{= 
																	${parts: [ {path: 'listEntitySet>'}, {path: 'parameter>/settings/subPages/'},{path: 
																	'parameter>/manifest'}, {path: 'facet>Target/AnnotationPath'},{path: 'parameter>/isDraftEnabled'}], 
																	formatter: 'zvui.work.controller.AnnotationHelper.getRowActionCountForDetailPage'}}" -->
																<table:rowSettingsTemplate>
																	<table:RowSettings
																		highlight="{parts: [{path: 'listEntityType>'}], formatter: 'zvui.work.controller.AnnotationHelper.setRowHighlight'}" />
																</table:rowSettingsTemplate>
																<table:columns>
																	<core:Fragment
																		fragmentName="zvui.work.fragment.GridTableColumns"
																		type="XML" />
																</table:columns>
																<table:rowActionTemplate>
																	<core:Fragment fragmentName="zvui.work.fragment.RowActions"
																		type="XML" />
																</table:rowActionTemplate>
															</table:Table>

														</template:else>
													</template:if>

												</st:SmartTable>

												
											<!-- </layout:mainContent> -->
											</Panel>
											</ScrollContainer>
											<layout:layoutData><layout:SplitterLayoutData size="100%" /></layout:layoutData>		
											</layout:SplitPane>
											<layout:SplitPane>
											<Panel visible="false" class="noPadding">
											<!-- <layout:sideContent> <Toolbar> <Title text="{i18n>TOOLS}" 
												/> <ToolbarSpacer /> <Button type="Emphasized" press="onDscApply" text="{i18n>APPLY}" 
												visible="{viewModel>/showDscApply}" /> <Button type="Transparent" press="onHideDsc1" 
												visible="{= !${media>/phone}}" icon="sap-icon://decline" /> </Toolbar> <OverflowToolbar 
												visible="{parts: [{path: 'listEntitySet>'}], formatter: 'zvui.work.controller.AnnotationHelper.isDSCinfoBarVisible'}" 
												class="sapMListInfoTBar sapMTB-Info-CTX"> <Label text=""/> </OverflowToolbar> 
												<IconTabBar id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::DSC::IconTab" 
												class="sapUiNoContentPadding"> <items> <IconTabFilter text="{i18n>DETAILS}"> 
												<content> <layout:VerticalLayout width="100%"> <layout:content> <Table id="{path: 
												'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::DSC::Table"> 
												<headerToolbar> <OverflowToolbar> <ToolbarSpacer /> <Button type="Emphasized" 
												press="onDscApply" text="{i18n>APPLY}" visible="{parts: [{path: 'listEntitySet>'}], 
												formatter: 'zvui.work.controller.AnnotationHelper.isDSCinfoBarVisible'}" 
												/> <Button type="Transparent" text="{i18n>CANCEL}" /> </OverflowToolbar> 
												</headerToolbar> <columns> <Column> <Text text="Field" /> </Column> <Column> 
												<Text text="Value" /> </Column> </columns> </Table> </layout:content> </layout:VerticalLayout> 
												</content> </IconTabFilter> <IconTabFilter text="{i18n>CODES}" visible="false"> 
												<content> <smartList:SmartList id="DSCCodes" listType="List" enableAutoBinding="true" 
												height="100%" width="70%" entitySet="{viewModel>/codesTableEntity}"> <smartList:listItemTemplate> 
												<CustomListItem> <HBox> <CheckBox enabled="true" partiallySelected="true" 
												text=""/> </HBox> </CustomListItem> </smartList:listItemTemplate> </smartList:SmartList> 
												</content> </IconTabFilter> <IconTabFilter text="{i18n>SUGGESTEDMATCHES}" 
												visible="false"> <content> </content> </IconTabFilter> </items> </IconTabBar> 
												</layout:sideContent> -->
										<!-- <layout:sideContent> -->
												<VBox class="vistexSideContent">
													<Panel width="100%" class="noPadding">
														<!-- <HBox> <Button id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::Table::Toolbar::DSCSize" 
															type="Transparent" icon="sap-icon://slim-arrow-left" press="onDSCSizeChange" 
															tooltip="{i18n>ZOOM_IN}"> </Button> -->
														<SegmentedButton
															id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::DSC::SegButton"
															width="100%">
															<items>
																<SegmentedButtonItem text="{i18n>DETAILS}"
																	key="details" press="onDSCSegmentedButtonChange" />
																<SegmentedButtonItem text="{i18n>CODES}"
																	key="codes" press="onDSCSegmentedButtonChange" />
																<SegmentedButtonItem text="{i18n>SUGGESTIONS}"
																	key="match" press="onDSCSegmentedButtonChange" />
																<!-- <SegmentedButtonItem icon="sap-icon://compare" text="{i18n>TOOLS}" 
																	key="matchDialog" press="onDSCSegmentedButtonChange"/> -->
																<SegmentedButtonItem text="{i18n>NOTES}"
																	key="notes" press="onDSCSegmentedButtonChange" visible="false" />
															</items>
														</SegmentedButton>
														<!-- </HBox> -->
														<!-- <Button icon="sap-icon://decline" type="Transparent" class="sapUiTinyMarginBegin" 
															tooltip="{i18n>CLOSE}" press="onCloseTableDSC"></Button> -->
													</Panel>
													<OverflowToolbar
														visible="{parts: [{path: 'listEntitySet>'}], formatter: 'zvui.work.controller.AnnotationHelper.isDSCinfoBarVisible'}"
														class="sapMListInfoTBar sapMTB-Info-CTX">
														<Label text="" />
													</OverflowToolbar>
													<ScrollContainer width="100%" height="550px"
														horizontal="false" vertical="true">
														<VBox
															id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::DSC::IconTab"
															class="sapUiNoContentPadding">
															<items>
																<Panel
																	visible="{= (${viewModel>/DSCSegmentedButtonSelectedKey} === 'details')}"
																	class="sapUiNoContentPadding">
																	<content>
																		<Table
																			id="{path: 'facet>', formatter: 'zvui.work.controller.AnnotationHelper.getStableIdPartFromFacet'}::DSC::Table">
																			<headerToolbar>
																				<OverflowToolbar>
																					<VBox
																						class="sapMTB sapMListInfoTBar sapMTB-Info-CTX vistex-sideContent-TableTitle"
																						visible="{parts: [{path: 'listEntitySet>'}], formatter: 'zvui.work.controller.AnnotationHelper.isDSCinfoBarVisible'}">
																						<Label text=""
																							class="sapUiSelectable sapMLabelTBHeader sapMLabelMaxWidth sapMBarChild" />
																					</VBox>
																					<ToolbarSpacer />																									
																					<Button type="Emphasized" press="onDscApply"
																						text="{i18n>APPLY}"
																						visible="{parts: [{path: 'listEntitySet>'}], formatter: 'zvui.work.controller.AnnotationHelper.isDSCinfoBarVisible'}" />
																					<!-- <Button type="Transparent" text="{i18n>CANCEL}" 
																						/> -->
																				</OverflowToolbar>
																			</headerToolbar>
																			<columns>
																				<Column>
																					<Text text="Field" />
																				</Column>
																				<Column>
																					<Text text="Value" />
																				</Column>
																			</columns>
																		</Table>
																	</content>
																</Panel>
																<Panel
																	visible="{= (${viewModel>/DSCSegmentedButtonSelectedKey} === 'codes')}"
																	class="sapUiNoContentPadding">
																	<content>

																	</content>
																</Panel>
																<Panel
																	visible="{= (${viewModel>/DSCSegmentedButtonSelectedKey} === 'match')}"
																	class="sapUiNoContentPadding">
																	<content>
																	</content>
																</Panel>
																<Panel
																	visible="{= (${viewModel>/DSCSegmentedButtonSelectedKey} === 'notes')}"
																	class="sapUiNoContentPadding">
																	<content>
																	</content>
																</Panel>
															</items>
														</VBox>
													</ScrollContainer>
												</VBox>
										<!-- 	</layout:sideContent>
										 </layout:DynamicSideContent> -->
										</Panel>
										</layout:SplitPane>												
										</layout:PaneContainer>
										</layout:ResponsiveSplitter>
									</template:with>
								</template:with>
							</template:with>
						</template:with>
					</template:with>
				</template:with>
			</template:alias>
		</template:alias>
	</template:alias>
</core:FragmentDefinition>